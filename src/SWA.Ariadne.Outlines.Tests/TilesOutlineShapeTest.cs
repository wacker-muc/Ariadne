// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using System.Drawing;
using SWA.Ariadne.Outlines;

namespace SWA.Ariadne.Outlines.Tests
{
    /// <summary>
    ///This is a test class for SWA.Ariadne.Outlines.TilesOutlineShape and is intended
    ///to contain all SWA.Ariadne.Outlines.TilesOutlineShape Unit Tests
    ///</summary>
    [TestClass()]
    public class TilesOutlineShapeTest
    {
        #region Test context

        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }

        #endregion

        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion

        #region Unit tests

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_01()
        {
            string testObject = "TOS_FromBitmapTest_01";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile02_8x32;
            RotateFlipType rft = RotateFlipType.RotateNoneFlipNone;
            int scale = 1;

            TestHalfArea(testObject, bitmap, rft, scale);
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_02()
        {
            string testObject = "TOS_FromBitmapTest_02";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile03_8x8;
            RotateFlipType rft = RotateFlipType.Rotate90FlipNone;
            int scale = 2;

            TestHalfArea(testObject, bitmap, rft, scale);
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_03()
        {
            string testObject = "TOS_FromBitmapTest_03";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile01_8x8;
            RotateFlipType rft = RotateFlipType.RotateNoneFlipNone;
            int scale = 4;

            TestHalfArea(testObject, bitmap, rft, scale);
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_04()
        {
            string testObject = "TOS_FromBitmapTest_04";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile01_8x8;
            RotateFlipType rft = RotateFlipType.RotateNoneFlipY;
            int scale = 1;

            TestHalfArea(testObject, bitmap, rft, scale);
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_05()
        {
            string testObject = "TOS_FromBitmapTest_05";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile01_8x8;
            RotateFlipType rft = RotateFlipType.RotateNoneFlipX;
            int scale = 1;

            TestHalfArea(testObject, bitmap, rft, scale);
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_06()
        {
            string testObject = "TOS_FromBitmapTest_06";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile03_8x8;
            RotateFlipType rft = RotateFlipType.RotateNoneFlipX;
            int scale = 1;

            TestHalfArea(testObject, bitmap, rft, scale);
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_07()
        {
            string testObject = "TOS_FromBitmapTest_07";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile03_8x8;
            RotateFlipType rft = RotateFlipType.RotateNoneFlipY;
            int scale = 1;

            TestHalfArea(testObject, bitmap, rft, scale);
        }

        private RotateFlipType[] rftArray = {
            RotateFlipType.RotateNoneFlipNone,
            RotateFlipType.Rotate90FlipNone,
            RotateFlipType.Rotate270FlipNone,
            RotateFlipType.Rotate180FlipNone,
            RotateFlipType.Rotate270FlipX,
            RotateFlipType.Rotate270FlipY,
        };

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_08()
        {
            string testObject = "TOS_FromBitmapTest_08(Tile8_03)";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile03_8x8;
            int scale = 1;

            for (int i = 0; i < rftArray.Length; i++)
            {
                RotateFlipType rft = RotateFlipType.RotateNoneFlipY;
                TestHalfArea(testObject, bitmap, rft, scale);
            }
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_09()
        {
            string testObject = "TOS_FromBitmapTest_09(Tile8x32_02)";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile02_8x32;
            int scale = 1;

            for (int i = 0; i < rftArray.Length; i++)
            {
                RotateFlipType rft = rftArray[i];
                TestHalfArea(testObject, bitmap, rft, scale);
            }
        }

        /// <summary>
        ///A test for FromBitmap (int, int, Bitmap, RotateFlipType, int)
        ///</summary>
        [DeploymentItem("SWA.Ariadne.Outlines.dll")]
        [TestMethod()]
        public void TOS_FromBitmapTest_10()
        {
            string testObject = "TOS_FromBitmapTest_10(Tile8_01)";

            Bitmap bitmap = SWA_Ariadne_Outlines_Resources_TilesAccessor.Tile01_8x8;
            int scale = 1;

            for (int i = 0; i < rftArray.Length; i++)
            {
                RotateFlipType rft = rftArray[i];
                TestHalfArea(testObject, bitmap, rft, scale);
            }
        }

        #endregion

        #region Auxiliary methods

        private static void TestHalfArea(string testObject, Bitmap bitmap, RotateFlipType rft, int scale)
        {
            int xSize = Math.Max(bitmap.Width, bitmap.Height) * scale;
            int ySize = xSize;

            OutlineShape actual = SWA_Ariadne_Outlines_TilesOutlineShapeAccessor.FromBitmap(xSize, ySize, bitmap, rft, scale);

            Assert.AreEqual(xSize * ySize / 2, actual.Area, testObject + " " + rft.ToString() + ": incorrect Area");
        }

        #endregion
    }
}
